#define _CRT_SECURE_NO_WARNINGS 1
//suming.c
#include<stdio.h>
int main(void)
{
	long num;
	long sum = 0L;
	int status;

	printf("please enter  an integer to be summed");
	printf("(q to quit):");
	status = scanf("%ld", &num);
	while (status == 1){
		sum = sum + num;
		printf("please enter next integer (q to quit):");
		status = scanf("%ld", &num);

	}
	printf("Those integers sum to %ld.\n", sum);
	return 0;
}
//The value of pi
#include<math.h>
#include<stdio.h>
int main(void)
{
	const double ANSWER = 3.14159;
	double response;
	printf("what is the value of pi?\n");
	scanf("%lf", &response);
	while (fabs(response - ANSWER) > 0.00001){
		printf("Try again!\n");
		scanf("%lf", &response);

	}
	printf("close enough!\n");
	return 0;
}

 //sweetie1.c--一个计数循环
#include<stdio.h>
int main(void)
{
	const int NUMBER = 10000;
	int count = 1;

	while (count <= NUMBER){
		printf("be my valentine!");
		count++;
	}
	return 0;
}

sweetie2.c--使用for循环的计数循环
#include<stdio.h>
int main(void){

	const int NUMBER = 22;
	int count;

	for (count = 1; count <= NUMBER; count++)
	printf("Be my valentine!\n");

	return 0;
}

for_cube.c--使用for循环创建一个立方表
#include<stdio.h>
#include<math.h>
int main(void){
	int num;
	printf("n  n cubed\n");
	for (num = 1; num <= 100; num++)
		printf("%5d %5d\n", num, num*num*num);
	return 0;

}

zeno.c--求序列的和
#include<stdio.h>
int main(void){
	int t_ct;
	double time, power_of_2;
	int limit;

	printf("ENTER the numer of terms you want:\n");
	scanf("%d", &limit);
	for (time = 0, power_of_2 = 1, t_ct = 1;
		t_ct <= limit; t_ct++, power_of_2 *= 2.0)
	{
		time += 1.0 / power_of_2;
		printf("time=%f when terms =%d.\n", time, t_ct);

	}
	return 0;
}
 
do whlie循环示例
#include<stdio.h>
int main(void){
	const int secret_code = 13;
	int code_entered;

	do
	{
		printf("To  enter the triskaidekaphobia therapy club,\n");
		printf("please enter the secret code number:");
		scanf("%d", &code_entered);

	} while (code_entered != secret_code);
	printf("congratulations! you are cured!\n");
	return 0;
}
嵌套循环
#include<stdio.h>
#define ROWS 6
#define CHARS 10
int main(void){
	int row;
	char ch;

	for (row = 0; row < ROWS; row++);
	{
		for (ch = 'A'; ch < ('A' + CHARS); ch++)
			printf("%c", ch);
		printf("\n");

	}
	return 0;
}

rows2.c
#include <stdio.h>
int main(void)
{
	float a, x, y;
	for (y = 1.5f; y>-1.5f; y -= 0.1f)
	{
		for (x = -1.5f; x<1.5f; x += 0.05f)
		{
			a = x*x + y*y - 1;
			char ch = a*a*a - x*x*y*y*y <= 0.0f ? '*' : ' ';
			putchar(ch);
		}
		printf("\n");
	}
	return 0;

}
rows2.c
#include<stdio.h>
int main(void){

	const int ROWS = 6;
	const int CHARS = 6;
	int row;
	char ch;

	for (row = 0; row < ROWS; row++)
	{
		for (ch = ('A' + row); ch < ('A' + CHARS); ch++)
			printf("%c", ch);
		printf("\n");  
	}
	return 0;
}
scores.c--使用循环处理数组
 
} 
power.c__计算数的整数幂
#include<stdio.h>
double power(double n, int p);//前置声明函数必不可少，让编译器知道power函数返回double类型，该函数定义在其他地方
int main(void){
	double x, xpow;
	int exp;

	printf("Enter a number and the positive integer power");
	printf("to which\n the number will be raised.Enter q ");
	printf("to quit.\n");
	while (scanf("%lf%d", &x, &exp) == 2){//使用scanf函数的返回值判断输入类型是否与转换说明相符合，是否进行循环体
		xpow = power(x, exp);
		printf("%.3g to the power %d is %.5g\n", x, exp, xpow);//%g是指根据情况判断是用%f还是%e
		printf("enter next pair of numbers or q to quit.\n");

	}
	printf("Hope you enjoy this trip--bye!\n");

	return 0;
}

double power(double n, int p)
{
	double pow = 1;
	int i;

	for (i = 1; i <= p; i++)//warning：不管是for循环还是while循环，测试条件后面不要加，或则;程序会将空白认作statement从而不进入真正的循环条件
	pow *= n;
	return pow;
}
  
